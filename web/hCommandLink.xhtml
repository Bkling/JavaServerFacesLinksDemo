<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <title>H:CommandLink Web Page</title>
    </h:head>
    <h:body>
        <h1>Welcome the the H:CommandLink Web Page</h1>
        Here are some facts about H:CommandLinks,
        <br/>
        <br/>
        Uses a value attribute, and instead of using a outcome attribute it uses an action attribute.
        <br/>
        <br/>
        The value attribute in this one is ued just like in the H:link tag, it is what the user sees.
        <br/>
        <br/>
        This one uses a action attribute and not a outcome attribute because this link acts as a submit 
        button. In order for the H:CommandLink to work properly however, you have to have it nested within 
        a form, one the begining page I just have it take you to to this page and on this page I show it work 
        as a submit button.
        <br/>
        <br/>
        This link also comes with a jsf.js file that is attached to the on click function. Also the page 
        is session based so it will remeber what you typed in even if you back up to type in another name. 
        Using HTML to do the same thing was much more complicated, and was difficult to understand. 
        Link to see Mykyong's version of it <a href="http://www.mkyong.com/jsf2/jsf-2-link-commandlink-and-outputlink-example/">Mykong's Version</a>
        <br/>
        <br/>
        <h:form>
            <h:inputText label="First Name" value="#{myBean.name}"/>
            <br/>
            <h:commandLink value="Enter Name" action="display"/>
        </h:form>
    </h:body>
</html>

